@model TaskLoggerApplication.Models.Project

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script>
    var i = 0, j = 0;
    function add_text() {
        var select = document.getElementById("user_list");
        var value = select.options[select.selectedIndex].value;

        document.getElementById("user_" + i).innerHTML = value;

        i++;

        var input1 = document.createElement("input");

        select.remove(select.selectedIndex);

        var para = document.createElement("p");
        para.setAttribute("id", "user_" + i);

        input1.setAttribute("type", "hidden");
        input1.setAttribute("value", value);
        input1.setAttribute("name", "Username[" + j + "]");

        j++;

        var div_para = document.getElementById("add_para");
        div_para.appendChild(para);

        var dropdown_div = document.getElementById("dropdown_div");
        dropdown_div.appendChild(input1);

    }
</script>

@*<div id="dropdown_div">
    <p id="user_0"></p>
    <select id="user_list">
        @foreach (var uName in ViewBag.items)
        {
            <option value="@uName">@uName</option>
        }
    </select>
</div>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Project</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.Label("Username", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Username", ViewBag.ListItems as List<SelectListItem>, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
            <div>
                <input type="button" id="" value="Add" onclick="add_text();" />
            </div>
        </div>*@
        <div class="form-group">
            <div id="dropdown_div">
                <label style="padding-left : 137px">Users</label>
                <div id="add_para" style="padding-left : 215px">
                    <p id="user_0"></p>
                </div>
                <div style="padding-left : 215px">
                    <select id="user_list" onchange="add_text();">
                        <option></option>
                        @foreach (var uName in ViewBag.ListItems)
                        {
                            <option value="@uName">@uName</option>
                        }
                    </select>
                </div>
            </div>
            <br />



            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
